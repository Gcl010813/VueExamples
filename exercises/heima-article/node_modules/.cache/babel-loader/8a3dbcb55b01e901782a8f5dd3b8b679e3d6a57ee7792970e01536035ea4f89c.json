{"ast":null,"code":"import { getArticlesAPI } from '@/api/articlesAPI.js';\nimport ArticlesInfoVue from '@/components/article/ArticleInfo.vue';\nexport default {\n  name: 'myHome',\n  data() {\n    return {\n      page: 1,\n      limit: 10,\n      articleList: [],\n      /* 下拉刷新 */\n      isLoading: false,\n      /* 上拉加载 上拉加载只有在 loading=false 时触发 */\n      loading: false,\n      /* 禁用组件(下拉刷新可以:bind绑定  上拉加载自带) */\n      finished: false\n    };\n  },\n  components: {\n    ArticlesInfoVue\n  },\n  methods: {\n    async initArticleList(isRefresh) {\n      const {\n        data: res\n      } = await getArticlesAPI(this.page, this.limit);\n      if (isRefresh) {\n        this.articleList = [...res, ...this.articleList];\n      } else {\n        /* es6语法 列表展开再合并 */\n        this.articleList = [...this.articleList, ...res];\n      }\n      // 加载数据 若res数据为空(当前页为空) 加载完成 页码减 1 不再触发加载事件\n      if (res.length === 0) {\n        this.page--;\n        this.finished = true;\n        // 加载数据 若res数据不为每页的限制数量(当前页不满 后续无数据) 不再触发加载事件\n      } else if (res.length !== this.limit) {\n        this.finished = true;\n      }\n    },\n    /* 下拉刷新 */\n    onRefresh() {\n      setTimeout(() => {\n        this.page++;\n        this.initArticleList(this.isLoading);\n        this.isLoading = false;\n      }, 1000);\n    },\n    /* 上拉加载 */\n    onLoad() {\n      this.page++;\n      this.initArticleList();\n      // 防抖就相当于一直按回城,每次都会被打断,停下了才不会被打断      节流就相当于技能cd没好,点了没用\n      // 防抖是又触发取消上一次的请求    节流是请求未完成不能进行下一次请求\n      // 加载完 改会fasle\n      this.loading = false;\n    }\n  },\n  created() {\n    this.initArticleList();\n  }\n};","map":{"version":3,"names":["getArticlesAPI","ArticlesInfoVue","name","data","page","limit","articleList","isLoading","loading","finished","components","methods","initArticleList","isRefresh","res","length","onRefresh","setTimeout","onLoad","created"],"sources":["src/views/home/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <!-- 下拉刷新 -->\r\n    <van-pull-refresh v-model=\"isLoading\" @refresh=\"onRefresh\" :disabled=\"finished\">\r\n      <van-nav-bar title=\"小郭头条\" fixed placeholder />\r\n      <!-- 上拉加载  immediate-check->是否在初始化时立即执行滚动位置检查 -->\r\n      <van-list\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        finished-text=\"已经到底啦\"\r\n        @load=\"onLoad\"\r\n        :immediate-check=\"false\"\r\n      >\r\n        <!-- 文章组件 -->\r\n        <ArticlesInfoVue\r\n          v-for=\"(item, index) in articleList\"\r\n          :key=\"index\"\r\n          :title=\"item.title\"\r\n          :author=\"item.aut_name\"\r\n          :cmt-count=\"item.comm_count\"\r\n          :time=\"item.pubdate\"\r\n          :cover=\"item.cover\"\r\n        ></ArticlesInfoVue>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getArticlesAPI } from '@/api/articlesAPI.js'\r\nimport ArticlesInfoVue from '@/components/article/ArticleInfo.vue'\r\nexport default {\r\n  name: 'myHome',\r\n  data () {\r\n    return {\r\n      page: 1,\r\n      limit: 10,\r\n      articleList: [],\r\n      /* 下拉刷新 */\r\n      isLoading: false,\r\n      /* 上拉加载 上拉加载只有在 loading=false 时触发 */\r\n      loading: false,\r\n      /* 禁用组件(下拉刷新可以:bind绑定  上拉加载自带) */\r\n      finished: false\r\n    }\r\n  },\r\n  components: {\r\n    ArticlesInfoVue\r\n  },\r\n  methods: {\r\n    async initArticleList (isRefresh) {\r\n      const { data: res } = await getArticlesAPI(this.page, this.limit)\r\n      if (isRefresh) {\r\n        this.articleList = [...res, ...this.articleList]\r\n      } else {\r\n      /* es6语法 列表展开再合并 */\r\n        this.articleList = [...this.articleList, ...res]\r\n      }\r\n      // 加载数据 若res数据为空(当前页为空) 加载完成 页码减 1 不再触发加载事件\r\n      if (res.length === 0) {\r\n        this.page--\r\n        this.finished = true\r\n        // 加载数据 若res数据不为每页的限制数量(当前页不满 后续无数据) 不再触发加载事件\r\n      } else if (res.length !== this.limit) {\r\n        this.finished = true\r\n      }\r\n    },\r\n    /* 下拉刷新 */\r\n    onRefresh () {\r\n      setTimeout(() => {\r\n        this.page++\r\n        this.initArticleList(this.isLoading)\r\n        this.isLoading = false\r\n      }, 1000)\r\n    },\r\n    /* 上拉加载 */\r\n    onLoad () {\r\n      this.page++\r\n      this.initArticleList()\r\n      // 防抖就相当于一直按回城,每次都会被打断,停下了才不会被打断      节流就相当于技能cd没好,点了没用\r\n      // 防抖是又触发取消上一次的请求    节流是请求未完成不能进行下一次请求\r\n      // 加载完 改会fasle\r\n      this.loading = false\r\n    }\r\n  },\r\n  created () {\r\n    this.initArticleList()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.home {\r\n  /deep/ .van-nav-bar__content {\r\n    background-color: lightcoral;\r\n    border-radius:20px;\r\n    .van-nav-bar__title {\r\n      font-weight: 800;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,SAAAA,cAAA;AACA,OAAAC,eAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,KAAA;MACAC,WAAA;MACA;MACAC,SAAA;MACA;MACAC,OAAA;MACA;MACAC,QAAA;IACA;EACA;EACAC,UAAA;IACAT;EACA;EACAU,OAAA;IACA,MAAAC,gBAAAC,SAAA;MACA;QAAAV,IAAA,EAAAW;MAAA,UAAAd,cAAA,MAAAI,IAAA,OAAAC,KAAA;MACA,IAAAQ,SAAA;QACA,KAAAP,WAAA,OAAAQ,GAAA,UAAAR,WAAA;MACA;QACA;QACA,KAAAA,WAAA,YAAAA,WAAA,KAAAQ,GAAA;MACA;MACA;MACA,IAAAA,GAAA,CAAAC,MAAA;QACA,KAAAX,IAAA;QACA,KAAAK,QAAA;QACA;MACA,WAAAK,GAAA,CAAAC,MAAA,UAAAV,KAAA;QACA,KAAAI,QAAA;MACA;IACA;IACA;IACAO,UAAA;MACAC,UAAA;QACA,KAAAb,IAAA;QACA,KAAAQ,eAAA,MAAAL,SAAA;QACA,KAAAA,SAAA;MACA;IACA;IACA;IACAW,OAAA;MACA,KAAAd,IAAA;MACA,KAAAQ,eAAA;MACA;MACA;MACA;MACA,KAAAJ,OAAA;IACA;EACA;EACAW,QAAA;IACA,KAAAP,eAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}