{"ast":null,"code":"import Header from '@/components/Header.vue';\nimport Footer from '@/components/Footer.vue';\nimport Item from '@/components/Item.vue';\nimport Counter from './components/Counter.vue';\nexport default {\n  data() {\n    return {\n      itemLists: [{\n        id: 1,\n        status: true,\n        src: '...',\n        info: '商品1',\n        price: 1.99,\n        count: 1\n      }, {\n        id: 2,\n        status: false,\n        src: '...',\n        info: '商品2',\n        price: 1.00,\n        count: 2\n      }, {\n        id: 3,\n        status: true,\n        src: '...',\n        info: '商品3',\n        price: 1.89,\n        count: 1\n      }]\n    };\n  },\n  components: {\n    Header,\n    Item,\n    Footer,\n    Counter\n  },\n  computed: {\n    itemsCount() {\n      return this.itemLists.filter(item => item.status).reduce((itemsCount, item) => {\n        return itemsCount + item.count;\n      }, 0);\n    },\n    itemsCost() {\n      return this.itemLists.filter(item => item.status).reduce((itemsCost, Item) => {\n        return itemsCost + Item.count * Item.price;\n      }, 0).toFixed(2) - '0';\n    },\n    itemsStatus() {\n      return this.itemLists.every(item => item.status);\n    }\n  },\n  methods: {\n    ItemToAppStatus(newInfo) {\n      this.itemLists.some(item => {\n        if (item.id == newInfo.id) {\n          item.status = newInfo.status;\n        }\n      });\n    },\n    CounterToApp(item, val) {\n      console.log(item);\n      console.log(val);\n    },\n    // CounterToApp(newInfo) {\n    //     this.itemLists.some(item => {\n    //         if (item.id == newInfo.id) {\n    //             item.count = newInfo.count\n    //         }\n    //     })\n    // },\n    // 接收Footer组件传递关于全选的状态\n    changeItemStatusAll(sta) {\n      this.itemLists.forEach(item => item.status = sta);\n    }\n  }\n};","map":{"version":3,"names":["Header","Footer","Item","Counter","data","itemLists","id","status","src","info","price","count","components","computed","itemsCount","filter","item","reduce","itemsCost","toFixed","itemsStatus","every","methods","ItemToAppStatus","newInfo","some","CounterToApp","val","console","log","changeItemStatusAll","sta","forEach"],"sources":["src/App.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <Header></Header>\n        <!-- 给item组件传值 item中使用插槽内嵌Counter组件-->\n        <Item v-for=\"(item, index) in itemLists\" :key=\"index\" :idRef=\"item.id\" :statusRef=\"item.status\" :srcRef=item.src\n            :infoRef=item.info :priceRef=item.price @ItemToAppStatus=\"ItemToAppStatus\">\n            <!-- CounterToApp函数不传参时默认接收到Counter组件传递的newCount 传参时需要自定义接收$event表示接收到Counter组件传递的newCount -->\n            <Counter :countRef=\"item.count\" @CounterToApp=\"CounterToApp(item, $event)\"></Counter>\n        </Item>\n        <!-- 给Footer组件传值 -->\n        <Footer :itemsCountRef=\"itemsCount\" :itemsCostRef=\"itemsCost\" :itemsStatusAllRef=\"itemsStatus\"\n            @FooterToApp=\"changeItemStatusAll\">\n        </Footer>\n    </div>\n</template>\n\n<script>\nimport Header from '@/components/Header.vue';\nimport Footer from '@/components/Footer.vue';\nimport Item from '@/components/Item.vue';\nimport Counter from './components/Counter.vue';\n\nexport default {\n    data() {\n        return {\n            itemLists: [\n                { id: 1, status: true, src: '...', info: '商品1', price: 1.99, count: 1 },\n                { id: 2, status: false, src: '...', info: '商品2', price: 1.00, count: 2 },\n                { id: 3, status: true, src: '...', info: '商品3', price: 1.89, count: 1 },\n            ]\n        }\n    },\n    components: {\n        Header,\n        Item,\n        Footer,\n        Counter\n    },\n    computed: {\n        itemsCount() {\n            return this.itemLists.filter(item => item.status).reduce((itemsCount, item) => {\n                return itemsCount + item.count\n            }, 0)\n        },\n        itemsCost() {\n            return this.itemLists.filter(item => item.status).reduce((itemsCost, Item) => {\n                return itemsCost + Item.count * Item.price\n            }, 0).toFixed(2) - '0'\n        },\n        itemsStatus() {\n            return this.itemLists.every(item => item.status)\n        }\n    },\n    methods: {\n        ItemToAppStatus(newInfo) {\n            this.itemLists.some(item => {\n                if (item.id == newInfo.id) {\n                    item.status = newInfo.status\n                }\n            })\n        },\n        CounterToApp(item, val) {\n            console.log(item);\n            console.log(val);\n        },\n        // CounterToApp(newInfo) {\n        //     this.itemLists.some(item => {\n        //         if (item.id == newInfo.id) {\n        //             item.count = newInfo.count\n        //         }\n        //     })\n        // },\n        // 接收Footer组件传递关于全选的状态\n        changeItemStatusAll(sta) {\n            this.itemLists.forEach(item => (item.status = sta))\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped></style>"],"mappings":"AAiBA,OAAAA,MAAA;AACA,OAAAC,MAAA;AACA,OAAAC,IAAA;AACA,OAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QAAAC,EAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAL,EAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAL,EAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,UAAA;IACAZ,MAAA;IACAE,IAAA;IACAD,MAAA;IACAE;EACA;EACAU,QAAA;IACAC,WAAA;MACA,YAAAT,SAAA,CAAAU,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAT,MAAA,EAAAU,MAAA,EAAAH,UAAA,EAAAE,IAAA;QACA,OAAAF,UAAA,GAAAE,IAAA,CAAAL,KAAA;MACA;IACA;IACAO,UAAA;MACA,YAAAb,SAAA,CAAAU,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAT,MAAA,EAAAU,MAAA,EAAAC,SAAA,EAAAhB,IAAA;QACA,OAAAgB,SAAA,GAAAhB,IAAA,CAAAS,KAAA,GAAAT,IAAA,CAAAQ,KAAA;MACA,MAAAS,OAAA;IACA;IACAC,YAAA;MACA,YAAAf,SAAA,CAAAgB,KAAA,CAAAL,IAAA,IAAAA,IAAA,CAAAT,MAAA;IACA;EACA;EACAe,OAAA;IACAC,gBAAAC,OAAA;MACA,KAAAnB,SAAA,CAAAoB,IAAA,CAAAT,IAAA;QACA,IAAAA,IAAA,CAAAV,EAAA,IAAAkB,OAAA,CAAAlB,EAAA;UACAU,IAAA,CAAAT,MAAA,GAAAiB,OAAA,CAAAjB,MAAA;QACA;MACA;IACA;IACAmB,aAAAV,IAAA,EAAAW,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAb,IAAA;MACAY,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAG,oBAAAC,GAAA;MACA,KAAA1B,SAAA,CAAA2B,OAAA,CAAAhB,IAAA,IAAAA,IAAA,CAAAT,MAAA,GAAAwB,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}