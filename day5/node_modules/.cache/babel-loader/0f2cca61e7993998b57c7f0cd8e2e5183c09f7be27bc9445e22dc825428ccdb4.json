{"ast":null,"code":"import Left from './components/Left.vue';\nimport Right from './components/Right.vue';\nimport LeftSlot from './components/LeftSlot.vue';\nimport RightSlot from './components/RightSlot.vue';\nexport default {\n  data() {\n    return {\n      comName: 'Left',\n      pColor: 'blue'\n    };\n  },\n  methods: {\n    changeComponent() {\n      this.comName = this.comName == 'Left' ? 'Right' : 'Left';\n    }\n  },\n  // 注册名称方便在页面结构上看到\n  components: {\n    Left,\n    Right,\n    LeftSlot,\n    RightSlot\n  },\n  directives: {\n    color1: {\n      bind(el) {\n        console.log(\"触发自定义指令\");\n        el.style.color = 'red';\n      }\n    }\n  }\n};","map":{"version":3,"names":["Left","Right","LeftSlot","RightSlot","data","comName","pColor","methods","changeComponent","components","directives","color1","bind","el","console","log","style","color"],"sources":["src/App.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <h1>App根组件</h1>\n        <hr>\n        <h3>动态组件功能</h3>\n        <button type=\"button\" class=\"btn btn-info\" @click=\"changeComponent\">点击切换显示(动态组件功能)</button>\n        <div class=\"box1\">\n            <!-- include 可以使用自定义名称 -->\n            <keep-alive include=\"MyLeft\">\n                <component :is=\"comName\"></component>\n            </keep-alive>\n        </div>\n        <hr>\n        <h3>插槽</h3>\n        <div class=\"box2\">\n            <LeftSlot></LeftSlot>\n            <RightSlot>\n                <!-- template 只起到包裹的作用  不渲染到页面上 -->\n                <!-- 默认传递到名字为defaule的插槽中 -->\n                <template>\n                    <p>这是App组件传递给RightSlot组件中默认插槽的内容</p>\n                </template>\n                <!-- 可以携带插槽名字 v-slot:MyRightSlot 简写#MyRightSlot -->\n                <!-- <template #MyRightSlot=\"obj\"> -->\n                <template #MyRightSlot=\"{ msg, user }\">\n                    <!-- 可以使用解构赋值方式 接收参数为组件传递的属性值 -->\n                    <p>这是App组件传递给RightSlot组件中MyRightSlot插槽的内容</p>\n                    <p>RightSlot组件中MyRightSlot插槽携带的信息传递给App组件 -></p>\n                    <span> {{ msg }}</span><span>{{ user }}</span>\n                </template>\n            </RightSlot>\n        </div>\n        <hr>\n        <h3>自定义指令</h3>\n        <div class=\"box3\">\n            <p v-color1>测试自定义指令</p>\n            <p v-color2=\"pColor\">测试自定义指令(传值)</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Left from './components/Left.vue';\nimport Right from './components/Right.vue';\nimport LeftSlot from './components/LeftSlot.vue';\nimport RightSlot from './components/RightSlot.vue';\n\nexport default {\n    data() {\n        return {\n            comName: 'Left',\n            pColor: 'blue'\n        }\n    },\n    methods: {\n        changeComponent() {\n            this.comName = (this.comName == 'Left' ? 'Right' : 'Left')\n        }\n    },\n    // 注册名称方便在页面结构上看到\n    components: {\n        Left,\n        Right,\n        LeftSlot,\n        RightSlot\n    },\n    directives: {\n        color1: {\n            bind(el) {\n                console.log(\"触发自定义指令\");\n                el.style.color = 'red'\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n#app {\n    background-color: rgba(128, 128, 128, .8);\n\n    .box1,\n    .box2 {\n        width: 100%;\n        height: 250px;\n        position: relative;\n        background-color: lightpink;\n    }\n}\n</style>"],"mappings":"AA0CA,OAAAA,IAAA;AACA,OAAAC,KAAA;AACA,OAAAC,QAAA;AACA,OAAAC,SAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,gBAAA;MACA,KAAAH,OAAA,QAAAA,OAAA;IACA;EACA;EACA;EACAI,UAAA;IACAT,IAAA;IACAC,KAAA;IACAC,QAAA;IACAC;EACA;EACAO,UAAA;IACAC,MAAA;MACAC,KAAAC,EAAA;QACAC,OAAA,CAAAC,GAAA;QACAF,EAAA,CAAAG,KAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}